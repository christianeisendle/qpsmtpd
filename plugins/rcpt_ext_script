#!/usr/bin/perl

=head1 NAME

rcpt_ext_script - Call an external shell script or program to verify the recipient.

=head1 DESCRIPTION

This B<qpsmtpd plugin> can be configured to call an external program or shell
script in order to verify a given recipient. The recipient's address is passed in
as first input parameter. The script/program has to return 0, in case the recipient is
valid. Any other return value means the recipient can't be verified.

=head1 CONFIGURATION
=over 4
=item script /path/to/script
This parameter has to be present otherwise the plugin is not loaded.
It specifies the script to be called given the full path to the script.
The script is run as same user as qpsmtpd is being executed.
Example:
    rcpt_ext_script script /var/qmail/bin/my-rcpt_chedck.sh
=back
=head1 LEGAL
This software is released into the public domain, and does not come with
warranty or guarantee of any kind. Use it at your own risk.
=head1 AUTHOR
Christian Eisendle <#########@eisendle.net>
=cut

#################################
#################################

use strict;
use warnings;

use Qpsmtpd::Constants;

sub register {
    my ($self, $qp, @args) = @_;
    if (@args != 2) {
        $self->log(LOGERROR, "Missing script");
	return;
    }
    else {
        my %args = @args;
        if ($args{script}) {
            $self->{_args}{script} = $args{script};
        }

    }
    $self->register_hook("rcpt", "rcpt_handler");
}

sub rcpt_handler {
    my ($self, $transaction, $rcpt) = @_;

    return DECLINED if $self->is_immune();

    my $address = $rcpt->address;
    $self->log(LOGINFO, "Checking deliverability for recipient '$address' using script " . $self->{_args}{script});

    system($self->{_args}{script}, "$address");
    if ( $? == 0 )
    {
        return DECLINED;
    }
    $self->adjust_karma(-1);
    return $self->get_reject("Recipient not found!");


}


